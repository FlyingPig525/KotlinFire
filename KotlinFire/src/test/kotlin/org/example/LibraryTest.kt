/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import io.github.flyingpig525.base.Template
import io.github.flyingpig525.base.Template.Type.*
import io.github.flyingpig525.base.TemplateCollection
import io.github.flyingpig525.base.block.PlayerEvent
import io.github.flyingpig525.base.item.type.NumItem.Companion.numItem
import io.github.flyingpig525.base.item.type.ParameterItem
import io.github.flyingpig525.base.item.type.TextItem.Companion.textItem
import io.ktor.http.Parameters
import io.ktor.util.Platform
import kotlinx.serialization.json.Json
import org.testng.annotations.Test

class LibraryTest {

//    @Test fun caveGenExample() {
//        TemplateCollection {
//            println(EventTemplate(PlayerEvent.Join) {
//                PlayerAction.teleport {
//                    +LocItem(0, 100, 0)
//                }
//                val currentLoc = "loc".toVarItem(LINE)
//                val noise = "noise".toVarItem(LINE)
//                Repeat.grid({
//                    +currentLoc
//                    +LocItem(0, LocItem.groundYLevel, 0)
//                    +LocItem(50, LocItem.groundYLevel + 50, 50)
//                }) {
//                    SetVariable.perlinNoise {
//                        +noise
//                        +currentLoc
//                    }
//                    IfVar.chain {
//                        val a = listOf("oak_wood", "dark_oak_wood", "birch_wood", "air", "air")
//                        for (i in 5 downTo 1) {
//                            greaterThan({
//                                +noise
//                                +((i.toFloat().div(7.5)).toNumItem())
//                            }) {
//                                GameAction.setBlock {
//                                    +MinecraftItem.mcItemOf("minecraft:${a[5 - i]}")
//                                    +currentLoc
//                                }
//                                Control.skip()
//                            }
//                        }
//
//                    }
//
//                }
//            }.getJsonData())
//            // Uncomment this when trying out this example
//             codeClientPlaceTemplates()
//
//        }
//    }

//        @Test fun clickerExample() {
//        TemplateCollection {
//            val playerMoney = "%uuid money".toVarItem(SAVE)
//
//            val actionBarLoop = Template(PROCESS, "actionBarLoop") {
//                Repeat.forever {
//                    PlayerAction.actionBar {
//                        +"<green>Money: $playerMoney".toTextItem()
//                    }
//                    Control.wait {
//                        +(1).numItem
//                    }
//                }
//            }
//
//            EventTemplate(PlayerEvent.Join) {
//                IfVar.varExists(
//                    {
//                        +"%uuid".saveVar
//                    },
//                    true
//                ) {
//                    SetVariable.chain {
//                        set {
//                            +"%uuid".saveVar
//                            +(1.numItem)
//                        }
//                        set {
//                            +playerMoney
//                            +(0.numItem)
//                        }
//                    }
//                }
//                SetVariable.setItemName {
//                    +"item".lineVar
//                    +MinecraftItem.mcItemOf("minecraft:redstone")
//                    +"<gradient:#7f52ff:#e3455d>Clicker".toTextItem()
//                }
//                PlayerAction.giveItems {
//                    +"item".lineVar
//                }
//
//                invokeTemplate(actionBarLoop)
//            }
//
//            EventTemplate(PlayerEvent.RightClick) {
//                SetVariable.increment {
//                    +playerMoney
//                }
//                PlayerAction.sendMessage {
//                    +"<gradient:#7f52ff:#e3455d>$playerMoney".textItem
//                }
//            }
            // Uncomment this when trying out this example
            // codeClientPlaceTemplates()
//        }
//    }

//    @Test
//    fun helloWorldExample() {
//        TemplateCollection {
//            println(Json { prettyPrint = true }.encodeToString(EventTemplate(PlayerEvent.Join) {
//                PlayerAction.sendMessage {
//                    +"<gradient:#7f52ff:#e3455d>Hello KotlinFire World!".textItem
//                }
//            }.getJsonData()))
      //       Uncomment this when trying out this example
      //       codeClientPlaceTemplates()
//        }
//    }
    // Example using function parameters
//    @Test
//    fun functionParameterExample() {
//        TemplateCollection {
//            Template(FUNCTION, "parameters", ParameterItem.num("number").parameter(), ParameterItem.txt("text").parameter()) {
//                val number = ParameterItem.num("number").variable()
//                val text =  ParameterItem.txt("text").variable()
//                Repeat.multiple({
//                    +number
//                }) {
//                    PlayerAction.sendMessage {
//                        +text
//                    }
//                }
//            }
//
//            EventTemplate(PlayerEvent.Join) {
//                callFunction("parameters") {
//                    +(4.numItem)
//                    +"heeee".textItem
//                }
//            }
//
            // Uncomment this when trying out this example
            // codeClientPlaceTemplates()
//        }
//    }
}